{"version":3,"sources":["api/todos.ts","api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/NewTodo/NewTodo.tsx","App.tsx","index.tsx"],"names":["id","title","completed","userId","name","username","email","UserInfo","user","users","find","findUserById","usersFromServer","className","href","TodoInfo","cn","TodoList","todos","map","todo","NewTodo","onAdd","useState","setTitle","newUser","setNewUser","todoId","setTodoId","selectedUserError","setSelectedUserError","titleError","setTitleError","onSubmit","event","preventDefault","namedUser","newTodo","type","placeholder","value","onChange","sanitizedTitle","target","replace","userFromList","App","todosFromServer","newTodos","setNewTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f2a5f601.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\n\nimport usersFromServer from '../../api/users';\nimport { User } from '../../types/types';\n\ntype Props = {\n  userId: number,\n};\n\nexport const findUserById = (users: User[], id: number) => {\n  return users.find((user: User) => (id === user.id));\n};\n\nexport const UserInfo: React.FC<Props> = ({\n  userId,\n}) => {\n  const user = findUserById(usersFromServer, userId);\n\n  return (\n    <a className=\"UserInfo\" href={`mailto: ${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport { Todo } from '../../types/types';\n\nexport const TodoInfo: React.FC<Todo> = ({\n  id,\n  title,\n  userId,\n  completed = false,\n}) => {\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo\n        userId={userId}\n      />\n    </article>\n  );\n};\n","import React from 'react';\n\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { Todo } from '../../types/types';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <>\n      {todos.map(todo => (\n        <TodoInfo\n          id={todo.id}\n          title={todo.title}\n          completed={todo.completed}\n          userId={todo.userId}\n          key={todo.id}\n        />\n      ))}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport usersFromServer from '../../api/users';\n\nimport { Todo } from '../../types/types';\n\ntype Props = {\n  onAdd: (todo: Todo) => void;\n};\n\nexport const NewTodo: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [newUser, setNewUser] = useState('');\n  const [todoId, setTodoId] = useState(3);\n\n  const [selectedUserError, setSelectedUserError] = useState(false);\n  const [titleError, setTitleError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const sanitizedTitle = event.target.value\n      .replace(/[^A-Za-zА-Яа-я0-9\\s]/g, '');\n\n    setTitle(sanitizedTitle);\n    setTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setNewUser(event.target.value);\n    setSelectedUserError(false);\n  };\n\n  const handleAdd = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title) {\n      setTitleError(true);\n      if (!newUser) {\n        setSelectedUserError(true);\n      }\n\n      return;\n    }\n\n    const namedUser = usersFromServer.find((user) => user.name === newUser);\n\n    if (!namedUser) {\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: todoId,\n      title,\n      userId: namedUser.id,\n      completed: false,\n    };\n\n    onAdd(newTodo);\n\n    setTodoId(todoId + 1);\n\n    setSelectedUserError(false);\n    setTitleError(false);\n    setNewUser('');\n    setTitle('');\n  };\n\n  return (\n    <form className=\"NewTodo\" onSubmit={handleAdd}>\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          placeholder=\"Please enter a title\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n        {titleError\n          && <span className=\"error\">Please enter a title</span>}\n      </div>\n\n      <div className=\"field\">\n        <select\n          data-cy=\"userSelect\"\n          onChange={handleUserChange}\n          value={newUser}\n        >\n          <option value=\"0\">Please choose a user</option>\n          {usersFromServer.map((userFromList) => {\n            return (\n              <option\n                value={userFromList.name}\n                key={userFromList.id}\n              >\n                {userFromList.name}\n              </option>\n            );\n          })}\n        </select>\n        {selectedUserError\n          && <span className=\"error\">Please choose a user</span>}\n      </div>\n\n      <button\n        type=\"submit\"\n        data-cy=\"submitButton\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\n\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/types';\nimport { TodoList } from './components/TodoList';\nimport { NewTodo } from './components/NewTodo';\n\nexport const App = () => {\n  const [newTodos, setNewTodos] = useState<Todo[]>(todosFromServer);\n\n  const addTodo = (newTodo: Todo) => {\n    setNewTodos([...newTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <NewTodo onAdd={addTodo} />\n\n      <section className=\"TodoList\">\n        <TodoList todos={newTodos} />\n      </section>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}